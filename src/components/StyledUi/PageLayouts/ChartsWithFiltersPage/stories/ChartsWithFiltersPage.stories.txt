import React from 'react';
import { ComponentStory, ComponentMeta } from '@storybook/react';
import { ChartsWithFiltersPage } from '../ChartsWithFiltersPage';
import { useGetAvureAlarmsQueryDemoDataFormatted } from 'components/StyledUi/demoData/avureAlarmsQueryDemoData';
import { useGetAvureAlarmsDemoData } from 'pages/FleetMachineDetail/demoData/useGetAvureAlarmsDemoData';
import { styledTheme } from 'components/StyledUi/theme';
import { processAlarmsData } from '../helpers/processAlarmsData';
import { useDateRange } from 'components/StyledUi/DateRange';
import { generateDateRangeCategories } from '../helpers/chartDataHelpers';
import { dsiAlarmsDemoData } from 'components/StyledUi/demoData/dsiAlarmsDemoData';

export default {
  title: 'StyledUi/PageViewLayouts/ChartsWithFiltersPage'
  // More on argTypes: https://storybook.js.org/docs/react/api/argtypes
} as ComponentMeta<typeof ChartsWithFiltersPage>;

// More on component templates: https://storybook.js.org/docs/react/writing-stories/introduction#using-args
const Template: ComponentStory<typeof ChartsWithFiltersPage> = (args) => {
  return <ChartsWithFiltersPage {...args} />;
};

const processedData = processAlarmsData(useGetAvureAlarmsDemoData, {
  // ads the start of day as an iso string to new key `date`
  addDateAsKey: `date`,
  // calculates duration and adds new key `duration`
  addDurationAsKey: `duration`,
  startTimeKey: `startTimestamp`,
  endTimeKey: `endTimestamp`,
  timeZone: `CST6CDT`,
  // converts the values of `type`, but leaves the key the same
  convertKeys: {
    type: {
      Critical: `A-Alarm`,
      'Product Alarm': `B-Alarm`,
      Warning: `C-Alarm`,
      addAsNewKey: `alarmType`
    },
    // renames the code key to `id`
    code: {
      renameKeyTo: `id`
    }
  }
});

export const ChartsWithFiltersPageDemo = Template.bind({});
ChartsWithFiltersPageDemo.args = {
  data: processedData,
  //groupKey: `type`,
  categoryKey: `date`,
  children: 'test',
  csvFileSettings: {
    fileName: `demo_file-name_2023-10-30_to_2023-11-15`
  },
  charts: [
    {
      title: 'Stacked Bar Chart',
      chartType: 'stacked-bar',
      groupKey: 'type',
      categoryKey: 'date',
      colors: styledTheme.charts.alarms
    },
    {
      title: 'Pie Chart By Type',
      chartType: 'pie-with-legend',
      groupKey: 'type',
      colors: styledTheme.charts.alarms
    }
  ]
};

/*
const processedDsiData = processAlarmsData(dsiAlarmsDemoData, {
  // ads the start of day as an iso string to new key `date`
  addDateAsKey: `date`,
  // calculates duration and adds new key `duration`
  //addDurationAsKey: `duration`,
  startTimeKey: `timestamp`,
  //endTimeKey: `endTimestamp`,
  //timeZone: `CST6CDT`,
  convertKeys: {
    sender_id: {
      0: `Custom Alert`,
      1: `it's on fire`,
      2: `the door is open`,
      5: `total meltdown`,
      19: `too cold`,
      addAsNewKey: `group`
    }
  }
});

export const DSIChartsWithFiltersPageDemo = Template.bind({})

DSIChartsWithFiltersPageDemo.args = {
  data: processedDsiData,
  //groupKey: `type`,
  categoryKey: `date`,
  children: 'test',
  csvFileSettings: {
    fileName: `demo_file-name_2023-10-30_to_2023-11-15`
  },
  charts: [
    {
      title: 'Stacked Bar Chart',
      chartType: 'stacked-bar',
      groupKey: 'group',
      categoryKey: 'date',
      colors: styledTheme.charts.alarms
    },
    {
      title: 'Pie Chart By Type',
      chartType: 'pie-with-legend',
      groupKey: 'group'
    }
  ]
};
*/
